---
dependency:
  name: galaxy
  role-file: requirements.yml
driver:
  name: podman
  provider:
    name: podman
lint:
  name: yamllint
  options:
    config-file: molecule/resources/yaml-lint.yml
platforms:
  - name: "hashicorp-${CONTAINER_DISTRO:-centos}_${CONTAINER_VERSION:-7}"
    image: "${CONTAINER_DISTRO:-centos}:${CONTAINER_VERSION:-7}"
    registry:
      url: "${CONTAINER_REGISTRY:-docker.io}"
    override_command: false
    dockerfile: ../resources/Dockerfile.j2
    privileged: true
    capabilities:
      - SYS_ADMIN
    security_opts:
      - seccomp=unconfined
    tmpfs:
      - /tmp
      - /run
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    pre_build_image: true
    command: ${CONTAINER_COMMAND:-"/sbin/init"}
    tty: true
    pid_mode: host
    environment:
      container: podman
provisioner:
  name: ansible
  config_options:
    defaults:
      stdout_callback: debug
  log: true
  playbooks:
    vagrant:
      prepare: ../resources/playbooks/prepare.yml
    converge: ../resources/playbooks/playbook.yml
    verify: ../resources/playbooks/verify.yml
  lint:
    name: ansible-lint
  inventory:
    host_vars:
      instance:
        ansible_user: ansible
scenario:
  name: podman  # optional
  create_sequence:
    - dependency
    - create
    - prepare
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - lint
    - dependency
    # - cleanup
    # - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    # - cleanup
    # - destroy
ansible:
  raw_env_vars:
    ANSIBLE_CALLBACK_PLUGINS: ${ANSIBLE_CALLBACK_PLUGINS}
verifier:
  name: goss
  directory: ../resources/tests
  lint:
    name: yamllint
